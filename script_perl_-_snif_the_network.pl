#!/usr/bin/perl
use warnings;
use strict;
sub prerequis();
sub snifMyNetwork();
sub fusionPcap($$);
sub fusionPcapArray($);
$, = "\n";

prerequis();
snifMyNetwork();


sub prerequis() {
  system("if [ ! -d \"pcap\" ];then mkdir pcap;fi");
  system("if [ ! -d \"json\" ];then mkdir json;fi");
}

sub snifMyNetwork() {
  print "Quel sera le nom de votre capture ?\n";
  my $capture = <STDIN>;
  chomp($capture);
  print "\n";
  print `ifconfig -a | grep "Link encap:Ethernet" | cut -d" " -f1 | nl -w1 -s"." | xargs -d"\n" -n 5`;

  print "Indiquez le numéro de l'interface à capturer ? (0 = any)\n";
  my $nbr_int = <STDIN>;
  chomp($nbr_int);
  if($nbr_int == 0) {
    $nbr_int = "any";
  }
  print "\nFaudra-t-il appliquer un filtre ? (si oui, le saisir)\n";
  my $filter = <STDIN>;
  chomp($filter);
  print "\nPréférez-vous arrêter la capture par rapport au temps (1), en fonction de la taille du fichier (2) ou lorsque vous le voudrez (3) ?\n";
  my $choice_pass = 0;
  my $choice_end_capture;
  while($choice_pass == 0) {
    $choice_end_capture = <STDIN>;
    chomp($choice_end_capture);
    if(($choice_end_capture == 1)||($choice_end_capture == 2)||($choice_end_capture == 3)) {
      $choice_pass = 1;
    }
  }
  if($choice_end_capture == 1) {
    print "\nCombien de temps doit durer la capture ? (en minute)\n";
    my $duree = <STDIN>;
    chomp($duree);
    $duree = $duree*60;
    system("tshark -i $nbr_int -p -a duration:$duree -w \"pcap/$capture.pcap\"");
  } elsif($choice_end_capture == 2) {
    print "\nQuelle taille devra faire la capture ? (en Mo)\n";
    my $poids = <STDIN>;
    chomp($poids);
    $poids = $poids*1024;
    system("tshark -i $nbr_int -p -a filesize:$poids -w \"pcap/$capture.pcap\"");
  } elsif($choice_end_capture == 3) {
    system("gnome-terminal tshark -i $nbr_int  -w \"pcap/$capture.pcap\" -q &");
    my $pid = `ps -e | grep tshark | cut -d" " -f2`;
    print "\nAppuyez sur la touche \"Entrée\" pour arrêter la capture.\n";
    <STDIN>;
    system("kill $pid");
  }
  system("tshark -2 -R \"$filter\" -r pcap/$capture.pcap -T \"json >json/$capture.json\"");
}

sub fusionPcap($$) {
  my($filenameA,$filenameB) = @_;
  system("mergecap -w \"pcap/$filenameA\" \"pcap/$filenameB\"");
}

sub fusionPcapArray($) {
  my($ref_tab) = @_;
  my @tab = @{$ref_tab};
  my $files = '';
  foreach my $file(@tab) {
    $files .= " \"$file\"";
  }
  system("mergecap -w$files");
}
